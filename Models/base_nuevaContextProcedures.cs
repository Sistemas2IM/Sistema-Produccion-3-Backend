// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using Sistema_Produccion_3_Backend.Models;
using System;
using System.Collections.Generic;
using System.Data;
using System.Threading;
using System.Threading.Tasks;

namespace Sistema_Produccion_3_Backend.Models
{
    public partial class base_nuevaContext
    {
        private Ibase_nuevaContextProcedures _procedures;

        public virtual Ibase_nuevaContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new base_nuevaContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public Ibase_nuevaContextProcedures GetProcedures()
        {
            return Procedures;
        }
    }

    public partial class base_nuevaContextProcedures : Ibase_nuevaContextProcedures
    {
        private readonly base_nuevaContext _context;

        public base_nuevaContextProcedures(base_nuevaContext context)
        {
            _context = context;
        }

        public virtual async Task<List<IndicadoresReporteResult>> IndicadoresReporteAsync(string idReporte, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "idReporte",
                    Size = 50,
                    Value = idReporte ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.VarChar,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<IndicadoresReporteResult>("EXEC @returnValue = [dbo].[IndicadoresReporte] @idReporte = @idReporte", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
